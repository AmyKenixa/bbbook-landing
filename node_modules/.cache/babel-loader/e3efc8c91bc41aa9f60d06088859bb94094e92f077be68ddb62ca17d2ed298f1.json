{"ast":null,"code":"// Updated handleSubmit function for EmailCapture.jsx\n// Replace the existing handleSubmit function with this one\n\nconst handleSubmit = async e => {\n  e.preventDefault();\n  if (!email || !email.includes('@')) {\n    setStatus('error');\n    setMessage('Por favor, introduce una dirección de email válida');\n    return;\n  }\n  setStatus('loading');\n  try {\n    // Acumbamail API requires form-data format\n    const formData = new FormData();\n    formData.append('auth_token', process.env.REACT_APP_ACUMBAMAIL_API_TOKEN);\n    formData.append('list_id', process.env.REACT_APP_ACUMBAMAIL_LIST_ID);\n    formData.append('merge_fields[EMAIL]', email);\n    formData.append('merge_fields[SOURCE]', source || 'website');\n    formData.append('merge_fields[SIGNUP_DATE]', new Date().toISOString().split('T')[0]);\n    formData.append('merge_fields[TAGS]', 'barcelona-guide,early-access');\n    formData.append('response_type', 'json');\n    console.log('Sending to Acumbamail:', {\n      email,\n      source,\n      list_id: process.env.REACT_APP_ACUMBAMAIL_LIST_ID\n    });\n    const response = await fetch('https://acumbamail.com/api/1/addSubscriber/', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await response.json();\n    console.log('Acumbamail response:', result);\n\n    // Check for success\n    if (result.status === 'success') {\n      setStatus('success');\n      setMessage('¡Perfecto! Te avisaremos cuando el libro esté disponible.');\n      setEmail('');\n\n      // Track the signup\n      if (typeof trackEmailSignup === 'function') {\n        trackEmailSignup(source, 'acumbamail');\n      }\n\n      // Mark modal as seen\n      if (type === 'modal') {\n        localStorage.setItem('bohemia-email-modal-seen', 'true');\n        setTimeout(() => setShowModal(false), 3000);\n      }\n    } else {\n      // Handle Acumbamail errors\n      if (result.error) {\n        if (result.error.toLowerCase().includes('already exists') || result.error.toLowerCase().includes('ya existe')) {\n          setStatus('success'); // Treat as success since they're already subscribed\n          setMessage('¡Ya estás en nuestra lista! Te avisaremos cuando esté listo.');\n        } else if (result.error.toLowerCase().includes('invalid email')) {\n          setStatus('error');\n          setMessage('Email no válido. Por favor, revisa la dirección.');\n        } else {\n          setStatus('error');\n          setMessage(`Error: ${result.error}`);\n        }\n      } else {\n        throw new Error('Respuesta inesperada del servidor');\n      }\n    }\n  } catch (error) {\n    console.error('Error en la suscripción:', error);\n    setStatus('error');\n    if (error.name === 'TypeError' && error.message.includes('fetch')) {\n      setMessage('Problema de conexión. Por favor, inténtalo de nuevo.');\n    } else {\n      setMessage('Algo salió mal. Por favor, inténtalo más tarde.');\n    }\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","email","includes","setStatus","setMessage","formData","FormData","append","process","env","REACT_APP_ACUMBAMAIL_API_TOKEN","REACT_APP_ACUMBAMAIL_LIST_ID","source","Date","toISOString","split","console","log","list_id","response","fetch","method","body","result","json","status","setEmail","trackEmailSignup","type","localStorage","setItem","setTimeout","setShowModal","error","toLowerCase","Error","name","message"],"sources":["/Users/amycancryn/Projects/bbbook-landing/src/components/EmailCapture.jsx"],"sourcesContent":["// Updated handleSubmit function for EmailCapture.jsx\n// Replace the existing handleSubmit function with this one\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  \n  if (!email || !email.includes('@')) {\n    setStatus('error');\n    setMessage('Por favor, introduce una dirección de email válida');\n    return;\n  }\n\n  setStatus('loading');\n  \n  try {\n    // Acumbamail API requires form-data format\n    const formData = new FormData();\n    formData.append('auth_token', process.env.REACT_APP_ACUMBAMAIL_API_TOKEN);\n    formData.append('list_id', process.env.REACT_APP_ACUMBAMAIL_LIST_ID);\n    formData.append('merge_fields[EMAIL]', email);\n    formData.append('merge_fields[SOURCE]', source || 'website');\n    formData.append('merge_fields[SIGNUP_DATE]', new Date().toISOString().split('T')[0]);\n    formData.append('merge_fields[TAGS]', 'barcelona-guide,early-access');\n    formData.append('response_type', 'json');\n\n    console.log('Sending to Acumbamail:', {\n      email,\n      source,\n      list_id: process.env.REACT_APP_ACUMBAMAIL_LIST_ID\n    });\n\n    const response = await fetch('https://acumbamail.com/api/1/addSubscriber/', {\n      method: 'POST',\n      body: formData\n    });\n\n    const result = await response.json();\n    console.log('Acumbamail response:', result);\n\n    // Check for success\n    if (result.status === 'success') {\n      setStatus('success');\n      setMessage('¡Perfecto! Te avisaremos cuando el libro esté disponible.');\n      setEmail('');\n      \n      // Track the signup\n      if (typeof trackEmailSignup === 'function') {\n        trackEmailSignup(source, 'acumbamail');\n      }\n      \n      // Mark modal as seen\n      if (type === 'modal') {\n        localStorage.setItem('bohemia-email-modal-seen', 'true');\n        setTimeout(() => setShowModal(false), 3000);\n      }\n    } else {\n      // Handle Acumbamail errors\n      if (result.error) {\n        if (result.error.toLowerCase().includes('already exists') || \n            result.error.toLowerCase().includes('ya existe')) {\n          setStatus('success'); // Treat as success since they're already subscribed\n          setMessage('¡Ya estás en nuestra lista! Te avisaremos cuando esté listo.');\n        } else if (result.error.toLowerCase().includes('invalid email')) {\n          setStatus('error');\n          setMessage('Email no válido. Por favor, revisa la dirección.');\n        } else {\n          setStatus('error');\n          setMessage(`Error: ${result.error}`);\n        }\n      } else {\n        throw new Error('Respuesta inesperada del servidor');\n      }\n    }\n\n  } catch (error) {\n    console.error('Error en la suscripción:', error);\n    setStatus('error');\n    \n    if (error.name === 'TypeError' && error.message.includes('fetch')) {\n      setMessage('Problema de conexión. Por favor, inténtalo de nuevo.');\n    } else {\n      setMessage('Algo salió mal. Por favor, inténtalo más tarde.');\n    }\n  }\n};"],"mappings":"AAAA;AACA;;AAEA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAClCC,SAAS,CAAC,OAAO,CAAC;IAClBC,UAAU,CAAC,oDAAoD,CAAC;IAChE;EACF;EAEAD,SAAS,CAAC,SAAS,CAAC;EAEpB,IAAI;IACF;IACA,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,8BAA8B,CAAC;IACzEL,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACE,4BAA4B,CAAC;IACpEN,QAAQ,CAACE,MAAM,CAAC,qBAAqB,EAAEN,KAAK,CAAC;IAC7CI,QAAQ,CAACE,MAAM,CAAC,sBAAsB,EAAEK,MAAM,IAAI,SAAS,CAAC;IAC5DP,QAAQ,CAACE,MAAM,CAAC,2BAA2B,EAAE,IAAIM,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpFV,QAAQ,CAACE,MAAM,CAAC,oBAAoB,EAAE,8BAA8B,CAAC;IACrEF,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC;IAExCS,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;MACpChB,KAAK;MACLW,MAAM;MACNM,OAAO,EAAEV,OAAO,CAACC,GAAG,CAACE;IACvB,CAAC,CAAC;IAEF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;MAC1EC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEjB;IACR,CAAC,CAAC;IAEF,MAAMkB,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpCR,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,MAAM,CAAC;;IAE3C;IACA,IAAIA,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;MAC/BtB,SAAS,CAAC,SAAS,CAAC;MACpBC,UAAU,CAAC,2DAA2D,CAAC;MACvEsB,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACA,IAAI,OAAOC,gBAAgB,KAAK,UAAU,EAAE;QAC1CA,gBAAgB,CAACf,MAAM,EAAE,YAAY,CAAC;MACxC;;MAEA;MACA,IAAIgB,IAAI,KAAK,OAAO,EAAE;QACpBC,YAAY,CAACC,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC;QACxDC,UAAU,CAAC,MAAMC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAC7C;IACF,CAAC,MAAM;MACL;MACA,IAAIT,MAAM,CAACU,KAAK,EAAE;QAChB,IAAIV,MAAM,CAACU,KAAK,CAACC,WAAW,CAAC,CAAC,CAAChC,QAAQ,CAAC,gBAAgB,CAAC,IACrDqB,MAAM,CAACU,KAAK,CAACC,WAAW,CAAC,CAAC,CAAChC,QAAQ,CAAC,WAAW,CAAC,EAAE;UACpDC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;UACtBC,UAAU,CAAC,8DAA8D,CAAC;QAC5E,CAAC,MAAM,IAAImB,MAAM,CAACU,KAAK,CAACC,WAAW,CAAC,CAAC,CAAChC,QAAQ,CAAC,eAAe,CAAC,EAAE;UAC/DC,SAAS,CAAC,OAAO,CAAC;UAClBC,UAAU,CAAC,kDAAkD,CAAC;QAChE,CAAC,MAAM;UACLD,SAAS,CAAC,OAAO,CAAC;UAClBC,UAAU,CAAC,UAAUmB,MAAM,CAACU,KAAK,EAAE,CAAC;QACtC;MACF,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,mCAAmC,CAAC;MACtD;IACF;EAEF,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdjB,OAAO,CAACiB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD9B,SAAS,CAAC,OAAO,CAAC;IAElB,IAAI8B,KAAK,CAACG,IAAI,KAAK,WAAW,IAAIH,KAAK,CAACI,OAAO,CAACnC,QAAQ,CAAC,OAAO,CAAC,EAAE;MACjEE,UAAU,CAAC,sDAAsD,CAAC;IACpE,CAAC,MAAM;MACLA,UAAU,CAAC,iDAAiD,CAAC;IAC/D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}